buildscript {
    repositories {
        mavenCentral()
        maven {
            name "central snapshots"
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }

    dependencies {
        classpath group: 'com.techshroom', name: 'Aversion', version: '3.0.0'
    }
}
plugins {
    id "com.github.hierynomus.license" version "0.13.1"
    id 'net.researchgate.release' version '2.5.0'
    id "com.github.johnrengelman.shadow" version "1.2.4"
}

// from release-files
apply plugin: 'edu.sc.seis.launch4j'
apply plugin: 'application'

apply plugin: 'aversion-apt'
apply plugin: 'aversion-util'
apply plugin: 'idea'

mainClassName = 'org.rivierarobotics.LidarClient'

util {
    javaVersion = '1.8'
    extraContainers.add('org.eclipse.fx.ide.jdt.core.JAVAFX_CONTAINER')
}
idea.project.languageLevel = util.javaVersion

eclipse.project {
    natures 'org.eclipse.xtext.ui.shared.xtextNature'
    buildCommand 'org.eclipse.xtext.ui.shared.xtextBuilder'
}

configurations.all {
    resolutionStrategy {
        cacheChangingModulesFor 0, 'seconds'
    }
}

repositories {
    mavenCentral()
    maven {
        name "central snapshots"
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

ext.protobufVersion = '3.2.0'
dependencies {
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
    compileOnly group: 'com.techshroom', name: 'jsr305-plus', version: '0.0.1'

    addAPTReqWComp group: 'com.google.guava', name: 'guava', version: '20.0'
    addAPT group: 'com.google.auto.service', name: 'auto-service', version: '1.0-rc3'
    addAPT group: 'com.google.auto.value', name: 'auto-value', version: '1.3'
    addAPTReq name: 'aopalliance'
    addAPTReq name: 'asm'
    addAPTReq name: 'auto-value'
    addAPTReq name: 'auto-common'
    addAPTReq name: 'cglib'
    addAPTReq name: 'commons-collections'
    addAPTReq name: 'commons-lang'
    addAPTReq name: 'dagger'
    addAPTReq name: 'javawriter'
    addAPTReq name: 'javax.inject'
    addAPTReq name: 'velocity'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
}

configure([compileJava, compileTestJava]) {
    options.compilerArgs += ['-Xlint:all', '-Xlint:-path']
    options.deprecation = true
    options.encoding = 'UTF-8'
    options.incremental = true
    options.fork = true
}

license {
    ext {
        name = project.name
        organization = project.organization
        url = project.url
    }
    header = rootProject.file('HEADER.txt')
    ignoreFailures = false
    strictCheck = true
    include '**/*.java'
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

import java.util.jar.Attributes.Name

jar {
    manifest {
        def map = new HashMap<String, String>()
        map.put(Name.MAIN_CLASS.toString(), project.property('mainClassName') as String)
        map.put(Name.IMPLEMENTATION_VERSION.toString(), project.version as String)
        attributes.putAll(map)
    }
}

apply plugin: me.kenzierocks.releasefiles.ReleaseFilesPlugin
